pipeline {
  agent any

  environment {
    // Docker image name + tag
    DOCKER_IMAGE = "shady90/myapp:${env.BUILD_NUMBER}"
    // Ensure Jenkins finds Docker CLI on macOS
    PATH = "/opt/homebrew/bin:${env.PATH}"
  }

  stages {
    stage('Checkout') {
      steps {
        // Checkout the correct branch
        git branch: 'main',
            url: 'https://github.com/kaleem126/myapp.git'
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          sh "docker --version || true"
          sh "docker build -t $DOCKER_IMAGE ."
        }
      }
    }

    stage('Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DH_USER', passwordVariable: 'DH_PASS')]) {
          sh '''
            echo "$DH_PASS" | docker login -u "$DH_USER" --password-stdin
            docker push $DOCKER_IMAGE
            docker logout
          '''
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        script {
          // Make sure kubectl is configured on Jenkins agent
          sh "kubectl set image deployment/myapp myapp=$DOCKER_IMAGE --record"
          sh "kubectl rollout status deployment/myapp --timeout=120s"
        }
      }
    }
  }

  post {
    success {
      echo "Pipeline succeeded: $DOCKER_IMAGE"
    }
    failure {
      echo "Pipeline failed"
    }
  }
}

